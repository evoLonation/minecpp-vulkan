/*
 * instance, extension, layer相关
 * instance: vulkan最底层的对象，一切皆源于instance，存储几乎所有状态
 */
export module vulkan.instance;

import "vulkan_config.h";
import vulkan.resource;
import toy;
import std;

export namespace vk {

struct DebugMessengerConfig {
  VkDebugUtilsMessageSeverityFlagBitsEXT message_severity_level;
  VkDebugUtilsMessageTypeFlagsEXT        message_type_flags;
};

/**
 * @brief Extension and layer needed by debug messenger will be enabled, and
 * there is debug messenger when constructing and destroying the object.
 * @param config The lifetime must longer than constructed object
 */
auto createInstance(const std::string& app_name, const DebugMessengerConfig& config) -> Instance;
auto createInstance(const std::string& app_name) -> Instance;

auto createDebugMessenger(VkInstance instance, const DebugMessengerConfig& config)
  -> DebugMessenger;
} // namespace vk